<%- include("partials/header") %>
<main class="container-md">
  <section class="row my-4 gap-4">
    <div class="border rounded col-md-8 p-5">
      <div class="d-flex justify-content-between mb-5 border-bottom pb-3">
        <h3>Address</h3>
        <button
          class="btn btn-dark"
          data-bs-toggle="modal"
          data-bs-target="#addressForm"
        >
          Add Address
        </button>
        <div
          class="modal fade"
          id="addressForm"
          tabindex="-1"
          aria-labelledby="exampleModalLabel"
          aria-hidden="true"
        >
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h1 class="modal-title fs-5" id="add-from">Add Addrress</h1>
                <button
                  type="button"
                  class="btn-close"
                  data-bs-dismiss="modal"
                  aria-label="Close"
                ></button>
              </div>
              <div class="modal-body">
                <form id="form">
                  <div class="mb-3">
                    <label for="name" class="form-label">Name</label>
                    <input
                      type="text"
                      class="form-control"
                      id="name"
                      name="name"
                      aria-describedby="emailHelp"
                    />
                  </div>
                  <div class="mb-3">
                    <label for="phone" class="form-label">Phone</label>
                    <input
                      type="number"
                      class="form-control"
                      id="phone"
                      name="phone"
                      aria-describedby="emailHelp"
                    />
                  </div>
                  <div class="mb-3">
                    <label for="houseNo" class="form-label">House No</label>
                    <input
                      type="text"
                      class="form-control"
                      id="houseNo"
                      name="houseNo"
                      aria-describedby="emailHelp"
                    />
                  </div>
                  <div class="mb-3">
                    <label for="city" class="form-label">City</label>
                    <input
                      type="text"
                      class="form-control"
                      id="city"
                      name="city"
                      aria-describedby="emailHelp"
                    />
                  </div>
                  <div class="mb-3">
                    <label for="state" class="form-label">State</label>
                    <input
                      type="text"
                      class="form-control"
                      id="state"
                      name="state"
                      aria-describedby="emailHelp"
                    />
                  </div>
                  <div class="mb-3">
                    <label for="pincode" class="form-label">Pincode</label>
                    <input
                      type="number"
                      class="form-control"
                      id="pincode"
                      name="pincode"
                      aria-describedby="emailHelp"
                    />
                  </div>
                  <div class="text-center">
                    <button type="submit" class="btn btn-dark w-50">
                      Submit
                    </button>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="cards d-flex gap-4 flex-wrap">
        <% addresses.forEach(address => { %>
        <div class="card w-25">
          <div class="card-body">
            <h5 class="card-title"><%= address.name %></h5>
            <p class="card-text"><%= address.phone %></p>
            <p class="card-text"><%= address.houseNo %></p>
            <p class="card-text"><%= address.city %></p>
            <p class="card-text"><%= address.state %></p>
            <p class="card-text"><%= address.pincode %></p>
            <button
              onclick="selectAddress('<%= JSON.stringify(address)%>')"
              class="btn btn-dark my-2"
            >
              Select
            </button>
            <button
              data-bs-toggle="modal"
              data-bs-target="#editForm<%= address._id %>"
              class="btn btn-dark"
            >
              <i class="bi bi-pencil-square"></i>
            </button>
            <button
              onclick="handleDelete('<%=address._id %>')"
              class="btn btn-danger"
            >
              <i class="bi bi-trash-fill"></i>
            </button>
          </div>
        </div>
        <div
          class="modal fade"
          id="editForm<%= address._id %>"
          tabindex="-1"
          aria-labelledby="exampleModalLabel"
          aria-hidden="true"
        >
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h1 class="modal-title fs-5" id="add-from">Edit Addrress</h1>
                <button
                  type="button"
                  class="btn-close"
                  data-bs-dismiss="modal"
                  aria-label="Close"
                ></button>
              </div>
              <div class="modal-body">
                <form id="updateAddressForm<%= address._id %>">
                  <input
                    type="text"
                    value="<%= address._id %>"
                    class="hidden"
                    name="id"
                  />
                  <div class="mb-3">
                    <label for="name" class="form-label">Name</label>
                    <input
                      type="text"
                      class="form-control"
                      id="name"
                      name="name"
                      value="<%= address.name %>"
                      aria-describedby="emailHelp"
                      required
                    />
                  </div>
                  <div class="mb-3">
                    <label for="phone" class="form-label">Phone</label>
                    <input
                      type="number"
                      class="form-control"
                      id="phone"
                      name="phone"
                      value="<%= address.phone %>"
                      aria-describedby="emailHelp"
                      required
                    />
                  </div>
                  <div class="mb-3">
                    <label for="houseNo" class="form-label">House No</label>
                    <input
                      type="text"
                      class="form-control"
                      id="houseNo"
                      name="houseNo"
                      value="<%= address.houseNo %>"
                      aria-describedby="emailHelp"
                      required
                    />
                  </div>
                  <div class="mb-3">
                    <label for="city" class="form-label">City</label>
                    <input
                      type="text"
                      class="form-control"
                      id="city"
                      name="city"
                      value="<%= address.city %>"
                      aria-describedby="emailHelp"
                      required
                    />
                  </div>
                  <div class="mb-3">
                    <label for="state" class="form-label">State</label>
                    <input
                      type="text"
                      class="form-control"
                      id="state"
                      name="state"
                      value="<%= address.state %>"
                      aria-describedby="emailHelp"
                      required
                    />
                  </div>
                  <div class="mb-3">
                    <label for="pincode" class="form-label">Pincode</label>
                    <input
                      type="number"
                      class="form-control"
                      id="pincode"
                      name="pincode"
                      value="<%= address.pincode %>"
                      aria-describedby="emailHelp"
                      required
                    />
                  </div>
                  <div class="text-center">
                    <button class="btn btn-dark w-50">Submit</button>
                  </div>
                </form>
                <script>
                  $("#updateAddressForm<%= address._id %>").validate({
                    rules: {
                      name: {
                        required: true,
                        pattern: /^[a-zA-Z ]+$/,
                      },
                      phone: {
                        required: true,
                        minlength: 10,
                        maxlength: 10,
                      },
                      houseNo: {
                        required: true,
                        pattern: /^[a-zA-Z0-9]/,
                      },
                      city: {
                        required: true,
                        pattern: /^[a-zA-Z ]+$/,
                      },
                      state: {
                        required: true,
                        pattern: /^[a-zA-Z ]+$/,
                      },
                      pincode: {
                        required: true,
                        minlength: 6,
                      },
                    },
                    submitHandler: async function (form, event) {
                      try {
                        event.preventDefault();
                        let id = form.id.value;
                        let name = form.name.value;
                        let phone = form.phone.value;
                        let houseNo = form.houseNo.value;
                        let city = form.city.value;
                        let state = form.state.value;
                        let pincode = form.pincode.value;

                        const data = await fetch("/update-address/" + id, {
                          method: "PUT",
                          headers: { "Content-Type": "application/json" },
                          body: JSON.stringify({
                            name,
                            phone,
                            houseNo,
                            city,
                            state,
                            pincode,
                          }),
                        });

                        const json = await data.json();

                        if (json.success) {
                          window.location.reload();
                        }
                      } catch (error) {
                        console.log(error);
                      }
                    },
                  });
                </script>
              </div>
            </div>
          </div>
        </div>
        <% }) %>
      </div>
    </div>
    <div class="payment col-md-3">
      <div class="border rounded d-fixed">
        <div class="border-bottom text-center p-2">
          <h4>Shipping information</h4>
        </div>
        <div class="shipping-address py-2 px-4 border-bottom">
          <!-- <p id="ship-address">Seclect Shipping Address</p> -->
          <h6 id="ship-name">Name : <%= addresses[0].name %></h6>
          <p id="ship-phone">Phone : <%= addresses[0].phone %></p>
          <p id="ship-houseNo">House No : <%= addresses[0].houseNo %></p>
          <p id="ship-city">City : <%= addresses[0].city %></p>
          <p id="ship-state">State : <%= addresses[0].state %></p>
          <p id="ship-pincode">Pincode : <%= addresses[0].pincode %></p>
        </div>
        <div class="billing">
          <div class="border-bottom text-center p-2">
            <h4>Payment Method</h4>
          </div>
          <div class="py-2 px-5">
            <p id="checkout-original-amount">
              Total Price : ₹ <%= new Intl.NumberFormat("en-IN").format(
              totalPrice) %>
            </p>
            <p id="checkout-discount-amount"></p>
          </div>
          <form>
            <div class="coupon p-2 border-bottom">
              <div class="d-flex">
                <input
                  type="text"
                  class="form-control"
                  id="couponCode"
                  placeholder="Apply Coupoun"
                />
                <button
                  type="button"
                  onclick="applyCoupon()"
                  class="btn btn-outline-dark"
                >
                  Apply
                </button>
              </div>
            </div>
          </form>
          <form id="checkout" class="py-2 px-1 border-bottom">
            <input
              id="addressId"
              type="text"
              class="hidden"
              name="addressId"
              value="<%= addresses[0]._id %>"
            />
            <div class="form-check my-2">
              <input
                class="form-check-input border-secondary"
                type="radio"
                name="paymentMethod"
                id="flexRadioDefault1"
                value="cashOnDelivery"
              />
              <label class="form-check-label" for="flexRadioDefault1">
                Cash On delivery
              </label>
            </div>
            <div class="form-check my-2">
              <input
                class="form-check-input border-secondary"
                type="radio"
                name="paymentMethod"
                value="upi"
                id="flexRadioDefault3"
              />
              <label class="form-check-label" for="flexRadioDefault2">
                Online Payment
              </label>
            </div>
            <div class="form-check my-2">
              <input
                class="form-check-input border-secondary"
                type="radio"
                name="paymentMethod"
                value="localWallet"
                id="wallet"
              />
              <label class="form-check-label" for="wallet"> Wallet </label>
            </div>
            <p id="wallet-balance"></p>
          </form>
          <div id="checkout-btn" class="button my-2 text-center">
            <button onclick="hanldeOrder()" class="btn btn-dark w-50">
              Checkout
            </button>
          </div>
        </div>
      </div>
    </div>
  </section>
</main>
<script
  src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"
  integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g=="
  crossorigin="anonymous"
  referrerpolicy="no-referrer"
></script>
<script
  src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.20.0/jquery.validate.min.js"
  integrity="sha512-WMEKGZ7L5LWgaPeJtw9MBM4i5w5OSBlSjTjCtSnvFJGSVD26gE5+Td12qN5pvWXhuWaWcVwF++F7aqu9cvqP0A=="
  crossorigin="anonymous"
  referrerpolicy="no-referrer"
></script>
<script
  src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.20.0/additional-methods.min.js"
  integrity="sha512-TiQST7x/0aMjgVTcep29gi+q5Lk5gVTUPE9XgN0g96rwtjEjLpod4mlBRKWHeBcvGBAEvJBmfDqh2hfMMmg+5A=="
  crossorigin="anonymous"
  referrerpolicy="no-referrer"
></script>
<script>
  $("#form").validate({
    rules: {
      name: {
        required: true,
        pattern: /^[a-zA-Z ]+$/,
      },
      phone: {
        required: true,
        minlength: 10,
        maxlength: 10,
      },
      houseNo: {
        required: true,
        pattern: /^[a-zA-Z0-9]/,
      },
      city: {
        required: true,
        pattern: /^[a-zA-Z ]+$/,
      },
      state: {
        required: true,
        pattern: /^[a-zA-Z ]+$/,
      },
      pincode: {
        required: true,
        minlength: 6,
      },
    },
    submitHandler: async function (form) {
      try {
        let name = form.name.value;
        let phone = form.phone.value;
        let houseNo = form.houseNo.value;
        let city = form.city.value;
        let state = form.state.value;
        let pincode = form.pincode.value;

        const data = await fetch("/add-address", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            name,
            phone,
            houseNo,
            city,
            state,
            pincode,
          }),
        });

        const json = await data.json();

        if (json.success) {
          window.location.reload();
        }
      } catch (error) {
        console.log(error);
      }
    },
  });
</script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  let walletBalance;
  let totalPrice = "<%= Number(totalPrice) %>";
  document.getElementById("wallet").addEventListener("change", async () => {
    const data = await fetch("/wallet-balance");
    const json = await data.json();
    walletBalance = json.balance;
    document.getElementById(
      "wallet-balance"
    ).innerText = `Wallet balance : ${new Intl.NumberFormat("en-IN").format(
      walletBalance
    )}`;
  });

  async function applyCoupon() {
    try {
      const couponCode = document.getElementById("couponCode").value;
      const data = await fetch("/apply-coupon", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ couponCode }),
      });

      const json = await data.json();

      let currDate;
      let startDate;
      let endDate;
      if (json.success) {
        currDate = new Date();
        startDate = new Date(json.coupon.startDate);
        endDate = new Date(json.coupon.endDate);
      }

      if (!json.success || !json.coupon.isAvailable || currDate < startDate) {
        Swal.fire({
          title: "Not Valid!!",
          text: "Coupon applied is not valid",
          icon: "warning",
          confirmButtonText: "Ok",
        }).then(() => {
          window.location.reload();
        });
      } else if (currDate > endDate) {
        Swal.fire({
          title: "Expired!!",
          text: "Coupon expired",
          icon: "warning",
        }).then(() => {
          window.location.reload();
        });
      } else if (json.success) {
        console.log("lasjdf");
        totalPrice -= json.coupon.discountAmount;

        let originalAmountElement = document.getElementById(
          "checkout-original-amount"
        );

        let styles = {
          textDecoration: "line-through",
          color: "red",
          fontSize: "18px",
        };

        Object.assign(originalAmountElement.style, styles);

        document.getElementById(
          "checkout-discount-amount"
        ).innerText = ` Total Price : ₹ ${new Intl.NumberFormat("en-IN").format(
          totalPrice
        )}`;
        Swal.fire({
          title: "Applied!!",
          text: "Coupon applied succesfully",
          icon: "success",
        });
      } else {
      }
    } catch (error) {
      console.log(error);
    }
  }

  function selectAddress(address) {
    let shipAddress = document.getElementById("ship-address");
    let name = document.getElementById("ship-name");
    let phone = document.getElementById("ship-phone");
    let houseNo = document.getElementById("ship-houseNo");
    let city = document.getElementById("ship-city");
    let state = document.getElementById("ship-state");
    let pincode = document.getElementById("ship-pincode");
    let addressid = document.getElementById("addressId");

    address = JSON.parse(address);

    if (address) {
      name.innerHTML = "Name : " + address.name;
      phone.innerHTML = "Phone : " + address.phone;
      houseNo.innerHTML = "Hounse No : " + address.houseNo;
      city.innerHTML = "City : " + address.city;
      state.innerHTML = "State : " + address.state;
      pincode.innerHTML = "Pincode : " + address.pincode;
      addressId.value = address._id;
    }
  }

  async function hanldeOrder() {
    let addressId = document.getElementById("addressId").value;

    let form = document.getElementById("checkout");
    let paymentMethod = form.paymentMethod.value;

    if (paymentMethod === "cashOnDelivery") {
      let data = await fetch("/checkout", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          paymentMethod,
          addressId,
          totalPrice,
        }),
      });
      let res = await data.json();
      if (res.success) {
        window.location.href = "/order-complete";
      }
    } else if (paymentMethod === "upi") {
      try {
        let price = totalPrice;
        let data = await fetch("/create-order", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            amount: price * 100,
          }),
        });
        let json = await data.json();
        if (json.orderId) {
          let orderId = json.orderId;
          let options = {
            key: "rzp_test_kJcOHKnrrkyPtJ", // Enter the Key ID generated from the Dashboard
            amount: totalPrice * 100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
            currency: "INR",
            name: "Aech", //your business name
            description: "Test Transaction",
            // image: "https://cdn.razorpay.com/logos/MkXOdj1zs2GhLl_original.png",
            order_id: orderId,
            callback_url: "/checkout",
            prefill: {
              //We recommend using the prefill parameter to auto-fill customer's contact information especially their phone number
              name: "hunais", //your customer's name
              email: "hunais@example.com",
              contact: "9000000000", //Provide the customer's phone number for better conversion rates
            },
            notes: {
              address: addressId,
              totalPrice: price,
            },
            theme: {
              color: "#455163",
            },
          };
          let rzp1 = new Razorpay(options);
          rzp1.open();
          e.preventDefault();
        }
      } catch (error) {
        console.log(error);
      }
    } else if (paymentMethod === "localWallet") {
      if (walletBalance === 0 || walletBalance < totalPrice) {
        Swal.fire({
          title: "Insufficient Balance!!!",
          text: "You don't have enough balance in wallet",
          icon: "warning",
          confirmButtonText: "Ok",
        });
      } else {
        let data = await fetch("/checkout", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            paymentMethod,
            addressId,
            totalPrice,
          }),
        });
        let res = await data.json();
        if (res.success) {
          window.location.href = "/order-complete";
        }
      }
    } else {
      Swal.fire({
        title: "Select Payment Method!!!",
        text: "You have to select a payment method",
        icon: "warning",
        confirmButtonText: "Ok",
      });
    }
  }

  async function handleDelete(id) {
    try {
      Swal.fire({
        title: "Do you want to Delete address?",
        showCancelButton: true,
        confirmButtonText: "Yes",
      }).then((result) => {
        if (result.isConfirmed) {
          deleteAddress(id);
        }
      });
    } catch (error) {
      console.log(error);
    }
  }

  async function deleteAddress(id) {
    const data = await fetch("/delete-address/" + id, {
      method: "DELETE",
    });
    const json = await data.json();
    if (json.success) {
      Swal.fire({
        title: "Deleted!!",
        text: "Address Deleted succesfully",
        icon: "success",
        confirmButtonText: "OK",
      }).then((result) => {
        window.location.reload();
      });
    } else {
      Swal.fire({
        title: "Failed!!",
        text: "Failed to delete Address",
        icon: "error",
        confirmButtonText: "OK",
      }).then((result) => {
        window.location.reload();
      });
    }
  }
</script>

<%- include("partials/footer") %>
