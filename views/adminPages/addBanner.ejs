<%- include("partials/header") %>
<section class="content lists col-md-10">
  <div
    class="box border rounded p-2 d-flex flex-column align-items-center justify-content-center"
  >
    <div class="w-50 shadow p-5">
      <h2 class="text-center my-3">Add Banner</h2>
      <form enctype="multipart/form-data">
        <div class="mb-3">
          <div
            class="img-container my-3 row align-items-center"
            style="height: 350px"
          >
            <img id="image" alt="" class="rounded mb-3" />
            <img src="" class="img-fluid" id="croppedImg" alt="" />
          </div>

          <div>
            <input
              type="file"
              class="form-control"
              id="input-img"
              aria-describedby="emailHelp"
              name="image"
              accept="image/*"
              required
              onchange="loadFile(event)"
            />
          </div>
        </div>
        <div class="text-center">
          <button type="button" id="cropButton" class="btn btn-dark w-50">
            Submit
          </button>
        </div>
      </form>
    </div>
  </div>
</section>
<script>
  function loadFile(event) {
    let image = document.getElementById("image");
    let croppedImg = document.getElementById("croppedImg");
    let inputImg = document.getElementById("input-img");
    image.src = null;
    croppedImg.src = "";

    image.src = URL.createObjectURL(event.target.files[0]);

    let cropper = new Cropper(image, {
      aspectRatio: 3 / 1,
      autoCrop: false,
    });

    document.getElementById("cropButton").addEventListener(
      "click",
      function () {
        // Get the cropped canvas data
        const canvas = cropper.getCroppedCanvas();

        // Set the source of the cropped image
        croppedImg.src = canvas.toDataURL("image/png");

        canvas.toBlob(function (blob) {
          const file = new File([blob], "croppedImg.png", {
            type: "image/png",
          });

          const formData = new FormData();
          formData.append("image", file);

          fetch("/add-Banner", {
            method: "POST",
            body: formData,
          })
            .then((response) => response.json())
            .then((data) => {

              if (data.success) {
                Swal.fire({
                  title: "Added!!",
                  text: "Banner Added succesfully",
                  icon: "success",
                  confirmButtonText: "OK",
                }).then((result) => {
                  window.location.href = "/banner-list";
                });
              }
            })
            .catch((error) => {
              console.error("Error:", error);
            });
        });

        cropper.destroy();
        image.style.display = "none";
      },
      "image/png"
    );
  }
</script>
<%- include("partials/footer") %>
